extends layout

block content
  style.
    .restreamRow, .psItem{
      display: flex;
      align-items:flex-end;
      justify-content: left;
    }
    .dst{
      padding: 4px;
      boder:1px solid gray;
      width: 600px;
    }
    .btn{
      background:yellowgreen;
      color: white;
      cursor: pointer;
      width: max-content;
      padding: 8px;
      margin: 8px 0;
    }

    .btn:hover{
      background: green;
    }
    .psItemStop{
      background: red;
      margin-left: 8px;
    }
    .psItemStop:hover{
      background: darkred;
    }
    .psBox{
      margin-top:20px
    }
    .psItem{
      margin-bottom: 8px;
    }
    .smallBtnRow{
      display: flex;
    }
    .smallBtn{
      padding: 4px;
      cursor: pointer;
      background: lightgray;
    }
  h1= title
  #app
    .restreamRow(v-if="ps.length<6 ")
      .rlabel откуда:
      div

        select(v-model="src")
          option 1ru
          option 1en
          option 2ru
          option 2en
          option 3ru
          option 3en
      div &nbsp;&nbsp;
      .rlabel куда:
      div
        .smallBtnRow
          .smallBtn(v-in:click="dest='rtmp://a.rtmp.youtube.com/live2/'") YT
          .smallBtn(v-in:click="dest='rtmp://ovsu.mycdn.me/input/'") VK
          .smallBtn(v-in:click="dest='rtmp://ovsu.mycdn.me/input/'") OK
          .smallBtn(v-in:click="dest='rtmp://upload.rutube.ru/live_push/'") RuTube
          .smallBtn(v-in:click="dest='rtmps://dc4-1.rtmp.t.me/s/'") TG
        input.dst(v-model="dest")
    .restreamRow(v-else)
      .rlabel  количество рестимов огрничено
    .btn(v-if="checkDest()" v-on:click="start()") запустить
    .psBox
      .psItem(v-for="item in ps")
        .psItemTitle {{item.url}}
        .psItemStop.btn(v-on:click="stopProc(item.pid)") Стоп
    .cpuBox CPU Usage (%): {{cpu}}
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vue@2.7.13/dist/vue.js"></script>
  script.
    let app= new Vue({
      el:"#app",
      data:{
        src:null,
        dest:"",
        ps:[],
        cpu:0
      },
      methods:{
        stopProc: async function (pid) {
          if(confirm("Уверен?" )) {
            await axios.post("/ps", {pid})
            await this.getPs();

          }
        },
        getPs:async function(){
          let data=(await axios.get("/ps")).data;
          this.ps=data.ps;
          this.cpu=data.cpu
        },
        getPsWork: async function () {
          console.log("getPsWork")
          await this.getPs();
          setTimeout(this.getPsWork,5000)
        },
        start:async function(){
            await axios.post("/restsream", {src:this.src, dest:this.dest});
            this.src=null;
            this.dest= null;
            await this.getPs();
        },
        checkDest:function() {
          if(!this.src)
            return false;
          if(!this.dest)
            return false;
          if(!this.dest.match(/^rtmp/))
            return false;
          return true;

        }
      },
      mounted:function (){
        console.log("vue ready")
        this.getPsWork();

      }
    })
